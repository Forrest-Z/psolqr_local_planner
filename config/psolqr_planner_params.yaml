PsoLqrPlanner:

  ## Particle Swarm Optimization(PSO) planner 
  # number of particles
  n_particles: 20
  # number of inherited particles (Note: Need to be less than parameter n_ Particles)
  n_inherited: 6
  # The reference number of position points contained in each particle
  pointNum: 5
  # The maximum velocity of particle motion
  max_speed: 15
  # inertia weight
  w_inertial: 1.0
  # social weight
  w_social: 2.0
  # cognitive weight
  w_cognitive: 1.2
  # obstacle factor(greater means obstacles)
  obs_factor: 0.39       

  # Note: The initial state of a particle swarm is generated by a mixture of three strategies: 
  #       1、directly extracting state points, (pso_state_init_ratio)
  #       2、adding random perturbations to state points, (pso_disturbance_state_init_ratio)
  #       3、generating randomly, (pso_random_init_ratio)
  #       The random initialization ratio (pso_random_init_ratio) is 1- pso_state_init_ratio - pso_disturbance_state_init_ratio, 
  #       so pso_state_init_ratio + pso_disturbance_state_init_ratio must be less than 1
  
  # State point initialization ratio
  pso_state_init_ratio: 0.2
  # Random disturbance state point initialization ratio
  pso_disturbance_state_init_ratio: 0.6
  # Whether to publish particles
  pub_particles: true
  # maximum iterations
  pso_max_iter: 5


  ## Global path clipping parameters
  #  Distance behind the robot that should be kept [meters]
  global_dist_behind_robot: 0.1 
  # The maximum allowed length of the remaining path after pruning [meters]
  global_max_path_length: 3
  # The maximum distance a pose can be from the current robot's pose to remain in the plan [meters]
  global_dist_threshold: 2.8



  ## LQR
  # goal reached tolerance
  goal_dist_tolerance: 0.2
  rotate_tolerance: 0.5

  # max iteration for ricatti solution
  lqr_max_iter: 100
  lqr_eps_iter: 1e-1

  # linear velocity
  max_v: 0.5
  min_v: 0.0
  max_v_inc: 0.5

  # angular velocity
  max_w: 1.57
  min_w: 0.0
  max_w_inc: 1.57

  # frame id
  base_frame: base_link
  map_frame: map

  # lookahead
  lookahead_time: 1.0
  min_lookahead_dist: 0.3
  max_lookahead_dist: 0.9

  # weight matrix for penalizing state error while tracking [x,y,theta]
  Q_matrix_diag: [1.0, 1.0, 1.0]

  # weight matrix for penalizing input error while tracking[v, w]
  R_matrix_diag: [1.0, 1.0]


